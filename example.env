# Database configuration
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=
DB_NAME=grant_opportunities

# Slack configuration
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_SIGNING_SECRET=your-slack-signing-secret
SLACK_CHANNEL_ID=C1234567890

# OpenAI configuration
OPENAI_API_KEY=sk-your-openai-api-key

# Debug options
# DEBUG_AI_EXTRACTION: shows detailed logs of AI extraction process (for debugging deadline issues)
# - true: shows full text sent to AI, AI response, and date pattern matching
# - false: shows only basic extraction results
DEBUG_AI_EXTRACTION=false

# Grant Market scraper configuration
# GRANT_MARKET_MAX_LOAD_MORE: maximum number of "Show More" button clicks for grant.market
# - Higher values load more grants but increase scraping time
# - Lower values for faster scraping but may miss recent grants
GRANT_MARKET_MAX_LOAD_MORE=15

# GRANT_MARKET_MAX_GRANTS: maximum number of grants to process per run for grant.market
# - Higher values process more grants but take longer and use more OpenAI API calls
# - Lower values for faster runs and lower costs but may miss some grants
# - Set to 0 or very high number (999) to process all found grants
GRANT_MARKET_MAX_GRANTS=300

# GRANT_MARKET_BATCH_SIZE: number of grants to process in parallel
# - Higher values = faster processing but more resource usage
# - Lower values = slower but more stable processing
# - Recommended: 3-7 (optimal balance of speed and stability)
GRANT_MARKET_BATCH_SIZE=20

# GRANT_MARKET_BATCH_DELAY: delay in milliseconds between batches
# - Higher values = more polite to the server, lower chance of rate limiting
# - Lower values = faster processing but higher chance of being blocked
# - Recommended: 500-2000ms
GRANT_MARKET_BATCH_DELAY=1000

# Server configuration
PORT=3000

# Startup behavior controls
# RUN_SCRAPING_ON_STARTUP: whether to run scraping immediately on app start
# - true: runs scraping when app starts (useful for testing/development)
# - false: only runs scraping on schedule (normal operation)
RUN_SCRAPING_ON_STARTUP=false

# RUN_WEEKLY_REPORT_ON_STARTUP: whether to send weekly report immediately on app start
# - true: sends weekly report when app starts (useful for testing)
# - false: only sends reports on schedule (normal operation)
RUN_WEEKLY_REPORT_ON_STARTUP=false

# Application behavior controls
# ENABLE_SCHEDULED_SCRAPING: whether to enable scheduled scraping (Monday 8 AM)
# - true: enables scheduled scraping
# - false: disables scheduled scraping
ENABLE_SCHEDULED_SCRAPING=true

# ENABLE_SCHEDULED_REPORTS: whether to enable scheduled weekly reports (Monday 9 AM)
# - true: enables scheduled weekly reports
# - false: disables scheduled weekly reports
ENABLE_SCHEDULED_REPORTS=true